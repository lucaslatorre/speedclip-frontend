<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/speedclip-web/src/app/core/services/theme.service.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/app/core/services/theme.service.ts" />
              <option name="updatedContent" value="import { Injectable } from '@angular/core';&#10;import { BehaviorSubject } from 'rxjs';&#10;import { ThemeName } from '../../shared/constants/design-tokens';&#10;&#10;const STORAGE_KEY = 'sc_theme';&#10;&#10;@Injectable({ providedIn: 'root' })&#10;export class ThemeService {&#10;  private readonly prefersDark = window.matchMedia?.('(prefers-color-scheme: dark)');&#10;  private currentTheme: ThemeName = 'light';&#10;  readonly theme$ = new BehaviorSubject&lt;ThemeName&gt;('light');&#10;&#10;  constructor() {&#10;    this.init();&#10;  }&#10;&#10;  private init() {&#10;    const saved = (localStorage.getItem(STORAGE_KEY) as ThemeName | null);&#10;    const os: ThemeName = this.prefersDark?.matches ? 'dark' : 'light';&#10;    this.setTheme(saved ?? os, false);&#10;&#10;    if (this.prefersDark) {&#10;      this.prefersDark.addEventListener('change', (e) =&gt; {&#10;        const savedExplicit = localStorage.getItem(STORAGE_KEY);&#10;        if (!savedExplicit) {&#10;          this.setTheme(e.matches ? 'dark' : 'light');&#10;        }&#10;      });&#10;    }&#10;  }&#10;&#10;  get theme(): ThemeName { return this.currentTheme; }&#10;&#10;  setTheme(theme: ThemeName, persist: boolean = true) {&#10;    this.currentTheme = theme;&#10;    document.documentElement.setAttribute('data-theme', theme);&#10;    document.documentElement.style.colorScheme = theme;&#10;    if (persist) localStorage.setItem(STORAGE_KEY, theme);&#10;    this.theme$.next(theme);&#10;  }&#10;&#10;  toggle() {&#10;    this.setTheme(this.currentTheme === 'light' ? 'dark' : 'light');&#10;  }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/app/features/dashboard/dashboard-page.component.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/app/features/dashboard/dashboard-page.component.html" />
              <option name="originalContent" value="&lt;section aria-labelledby=&quot;dash-title&quot; class=&quot;container&quot;&gt;&#10;    &lt;header class=&quot;head&quot;&gt;&#10;        &lt;h1 id=&quot;dash-title&quot;&gt;Dashboard&lt;/h1&gt;&#10;        &lt;div class=&quot;actions&quot;&gt;&#10;            &lt;sc-button routerLink=&quot;/upload&quot; size=&quot;md&quot; variant=&quot;filled&quot;&gt;Novo Upload&lt;/sc-button&gt;&#10;                &lt;sc-button size=&quot;md&quot; variant=&quot;filled&quot;&gt;Novo Upload&lt;/sc-button&gt;&#10;            &lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/header&gt;&#10;&#10;    &lt;div *ngIf=&quot;(videos$|async) as videos; else loading&quot; class=&quot;list&quot;&gt;&#10;        &lt;div *ngIf=&quot;!videos.length&quot; class=&quot;empty&quot;&gt;&#10;            &lt;p class=&quot;muted&quot;&gt;Nenhum vídeo ainda. Comece com um upload.&lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;ul&gt;&#10;            &lt;li *ngFor=&quot;let v of videos&quot; class=&quot;row&quot;&gt;&#10;                &lt;div class=&quot;col main&quot;&gt;&#10;                    &lt;div class=&quot;title&quot;&gt;{{ v.title }}&lt;/div&gt;&#10;                    &lt;div class=&quot;meta&quot;&gt;{{ v.duration / 60 | number:'1.0-0' }} min • {{ v.status }}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;col actions&quot;&gt;&#10;                    &lt;a [routerLink]=&quot;['/editor', v.id]&quot; class=&quot;link&quot;&gt;Editar&lt;/a&gt;&#10;                    &lt;span class=&quot;sep&quot;&gt;•&lt;/span&gt;&#10;                    &lt;a [routerLink]=&quot;['/subtitles', v.id]&quot; class=&quot;link&quot;&gt;Legendas&lt;/a&gt;&#10;                    &lt;span class=&quot;sep&quot;&gt;•&lt;/span&gt;&#10;                    &lt;a [routerLink]=&quot;['/preview-export', v.id]&quot; class=&quot;link&quot;&gt;Exportar&lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/li&gt;&#10;        &lt;/ul&gt;&#10;    &lt;/div&gt;&#10;    &lt;ng-template #loading&gt;&#10;        &lt;p class=&quot;muted&quot;&gt;Carregando…&lt;/p&gt;&#10;    &lt;/ng-template&gt;&#10;&lt;/section&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;section aria-labelledby=&quot;dash-title&quot; class=&quot;container&quot;&gt;&#10;    &lt;header class=&quot;head&quot;&gt;&#10;        &lt;h1 id=&quot;dash-title&quot;&gt;Dashboard&lt;/h1&gt;&#10;        &lt;div class=&quot;actions&quot;&gt;&#10;            &lt;sc-button routerLink=&quot;/upload&quot; size=&quot;md&quot; variant=&quot;filled&quot;&gt;Novo Upload&lt;/sc-button&gt;&#10;            &lt;sc-button size=&quot;md&quot; variant=&quot;filled&quot;&gt;Novo Upload&lt;/sc-button&gt;&#10;        &lt;/div&gt;&#10;    &lt;/header&gt;&#10;&#10;    &lt;div *ngIf=&quot;(videos$|async) as videos; else loading&quot; class=&quot;list&quot;&gt;&#10;        &lt;div *ngIf=&quot;!videos.length&quot; class=&quot;empty&quot;&gt;&#10;            &lt;p class=&quot;muted&quot;&gt;Nenhum vídeo ainda. Comece com um upload.&lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;ul&gt;&#10;            &lt;li *ngFor=&quot;let v of videos&quot; class=&quot;row&quot;&gt;&#10;                &lt;div class=&quot;col main&quot;&gt;&#10;                    &lt;div class=&quot;title&quot;&gt;{{ v.title }}&lt;/div&gt;&#10;                    &lt;div class=&quot;meta&quot;&gt;{{ v.duration / 60 | number:'1.0-0' }} min • {{ v.status }}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;col actions&quot;&gt;&#10;                    &lt;a [routerLink]=&quot;['/editor', v.id]&quot; class=&quot;link&quot;&gt;Editar&lt;/a&gt;&#10;                    &lt;span class=&quot;sep&quot;&gt;•&lt;/span&gt;&#10;                    &lt;a [routerLink]=&quot;['/subtitles', v.id]&quot; class=&quot;link&quot;&gt;Legendas&lt;/a&gt;&#10;                    &lt;span class=&quot;sep&quot;&gt;•&lt;/span&gt;&#10;                    &lt;a [routerLink]=&quot;['/preview-export', v.id]&quot; class=&quot;link&quot;&gt;Exportar&lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/li&gt;&#10;        &lt;/ul&gt;&#10;    &lt;/div&gt;&#10;    &lt;ng-template #loading&gt;&#10;        &lt;p class=&quot;muted&quot;&gt;Carregando…&lt;/p&gt;&#10;    &lt;/ng-template&gt;&#10;&lt;/section&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/app/layouts/main-layout/main-layout.component.scss">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/app/layouts/main-layout/main-layout.component.scss" />
              <option name="originalContent" value="@use '../../../styles/mixins' as *;&#10;&#10;.shell {&#10;    display: grid;&#10;    grid-template-columns: var(--sidebar-w) 1fr;&#10;    grid-template-rows: var(--topbar-h) 1fr;&#10;    min-height: 100dvh;&#10;    background: var(--color-bg);&#10;    color: var(--color-text);&#10;    transition: grid-template-columns var(--transition-normal);&#10;}&#10;&#10;.shell.collapsed {&#10;    grid-template-columns: var(--sidebar-w-collapsed) 1fr;&#10;}&#10;&#10;.sidebar {&#10;    grid-row: 1 / span 2;&#10;    grid-column: 1;&#10;    background: var(--color-surface);&#10;    border-right: 1px solid var(--divider-color);&#10;    padding: var(--spacing-16);&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: var(--spacing-24);&#10;}&#10;&#10;.brand {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: var(--spacing-12);&#10;}&#10;&#10;.collapse-btn {&#10;    height: 40px;&#10;    width: 40px;&#10;    border-radius: var(--radius-md);&#10;    background: transparent;&#10;    border: 1px solid var(--divider-color);&#10;    color: var(--color-text);&#10;    cursor: pointer;&#10;    transition: background var(--transition-fast);&#10;}&#10;&#10;.collapse-btn:hover {&#10;    background: color-mix(in srgb, var(--color-text) 4%, transparent);&#10;}&#10;&#10;.logo {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    gap: var(--spacing-8);&#10;    color: inherit;&#10;}&#10;&#10;.logo .dot {&#10;    width: 20px;&#10;    height: 20px;&#10;    border-radius: 6px;&#10;    background: var(--color-primary);&#10;    display: inline-block;&#10;}&#10;&#10;.logo .name {&#10;    font-weight: 600;&#10;}&#10;&#10;.nav {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: var(--spacing-24);&#10;}&#10;&#10;.group-label {&#10;    color: var(--color-text-muted);&#10;    font-size: 0.8rem;&#10;    margin-bottom: var(--spacing-8);&#10;}&#10;&#10;.item {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: var(--spacing-12);&#10;    height: 44px;&#10;    padding: 0 var(--spacing-12);&#10;    border-radius: var(--radius-md);&#10;    color: inherit;&#10;}&#10;&#10;.item:hover {&#10;    background: color-mix(in srgb, var(--color-text) 4%, transparent);&#10;    text-decoration: none;&#10;}&#10;&#10;.item.active {&#10;    background: color-mix(in srgb, var(--color-text) 6%, transparent);&#10;}&#10;&#10;.icon {&#10;    font-size: 18px;&#10;    width: 20px;&#10;    text-align: center;&#10;}&#10;&#10;/* Collapsed */&#10;.shell.collapsed .label, .shell.collapsed .group-label {&#10;    display: none;&#10;}&#10;&#10;.shell.collapsed .sidebar {&#10;    padding: var(--spacing-16) var(--spacing-12);&#10;}&#10;&#10;.content-col {&#10;    grid-column: 2;&#10;    grid-row: 1 / span 2;&#10;    display: grid;&#10;    grid-template-rows: var(--topbar-h) 1fr;&#10;}&#10;&#10;.topbar {&#10;    position: sticky;&#10;    top: 0;&#10;    z-index: 10;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: space-between;&#10;    padding: 0 clamp(var(--spacing-24), 4vw, var(--spacing-48));&#10;    @include glass-surface();&#10;    background: var(--glass-bg);&#10;}&#10;&#10;.crumbs {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    gap: var(--spacing-8);&#10;    font-size: 0.875rem;&#10;}&#10;&#10;.crumbs .crumb {&#10;    color: var(--color-link);&#10;    text-decoration: none;&#10;}&#10;&#10;.crumbs .crumb:hover {&#10;    text-decoration: underline;&#10;    text-underline-offset: 2px;&#10;}&#10;&#10;.crumbs .crumb:focus-visible {&#10;    outline: 2px solid var(--color-accent);&#10;    outline-offset: 2px;&#10;    border-radius: 4px;&#10;}&#10;&#10;.crumbs .crumb.current {&#10;    color: var(--color-text);&#10;    font-weight: 600;&#10;}&#10;&#10;.sep {&#10;    opacity: 0.6;&#10;}&#10;&#10;.actions {&#10;    display: inline-flex;&#10;    gap: var(--spacing-8);&#10;}&#10;&#10;.actions .ghost {&#10;    height: 40px;&#10;    min-width: 40px;&#10;    padding: 0 var(--spacing-12);&#10;    border-radius: var(--radius-md);&#10;    border: 1px solid var(--divider-color);&#10;    background: transparent;&#10;    color: inherit;&#10;    cursor: pointer;&#10;}&#10;&#10;.actions .ghost:hover {&#10;    background: color-mix(in srgb, var(--color-text) 4%, transparent);&#10;}&#10;&#10;.page {&#10;    padding: var(--spacing-24) 0;&#10;}&#10;&#10;@media (max-width: 1024px) {&#10;    .shell, .shell.collapsed {&#10;        grid-template-columns: var(--sidebar-w-collapsed) 1fr;&#10;    }&#10;    .label, .group-label {&#10;        display: none;&#10;    }&#10;    .sidebar {&#10;        padding: var(--spacing-16) var(--spacing-12);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="@use '../../../styles/mixins' as mix;&#10;&#10;.shell {&#10;    display: grid;&#10;    grid-template-columns: var(--sidebar-w) 1fr;&#10;    grid-template-rows: var(--topbar-h) 1fr;&#10;    min-height: 100dvh;&#10;    background: var(--color-bg);&#10;    color: var(--color-text);&#10;    transition: grid-template-columns var(--transition-normal);&#10;}&#10;&#10;.shell.collapsed {&#10;    grid-template-columns: var(--sidebar-w-collapsed) 1fr;&#10;}&#10;&#10;.sidebar {&#10;    grid-row: 1 / span 2;&#10;    grid-column: 1;&#10;    background: var(--color-surface);&#10;    border-right: 1px solid var(--divider-color);&#10;    padding: var(--spacing-16);&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: var(--spacing-24);&#10;}&#10;&#10;.brand {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: var(--spacing-12);&#10;}&#10;&#10;.collapse-btn {&#10;    height: 40px;&#10;    width: 40px;&#10;    border-radius: var(--radius-md);&#10;    background: transparent;&#10;    border: 1px solid var(--divider-color);&#10;    color: var(--color-text);&#10;    cursor: pointer;&#10;    transition: background var(--transition-fast);&#10;}&#10;&#10;.collapse-btn:hover {&#10;    background: color-mix(in srgb, var(--color-text) 4%, transparent);&#10;}&#10;&#10;.logo {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    gap: var(--spacing-8);&#10;    color: inherit;&#10;}&#10;&#10;.logo .dot {&#10;    width: 20px;&#10;    height: 20px;&#10;    border-radius: 6px;&#10;    background: var(--color-primary);&#10;    display: inline-block;&#10;}&#10;&#10;.logo .name {&#10;    font-weight: 600;&#10;}&#10;&#10;.nav {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: var(--spacing-24);&#10;}&#10;&#10;.group-label {&#10;    color: var(--color-text-muted);&#10;    font-size: 0.8rem;&#10;    margin-bottom: var(--spacing-8);&#10;}&#10;&#10;.item {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: var(--spacing-12);&#10;    height: 44px;&#10;    padding: 0 var(--spacing-12);&#10;    border-radius: var(--radius-md);&#10;    color: inherit;&#10;}&#10;&#10;.item:hover {&#10;    background: color-mix(in srgb, var(--color-text) 4%, transparent);&#10;    text-decoration: none;&#10;}&#10;&#10;.item.active {&#10;    background: color-mix(in srgb, var(--color-text) 6%, transparent);&#10;}&#10;&#10;.icon {&#10;    font-size: 18px;&#10;    width: 20px;&#10;    text-align: center;&#10;}&#10;&#10;/* Collapsed */&#10;.shell.collapsed .label, .shell.collapsed .group-label {&#10;    display: none;&#10;}&#10;&#10;.shell.collapsed .sidebar {&#10;    padding: var(--spacing-16) var(--spacing-12);&#10;}&#10;&#10;.content-col {&#10;    grid-column: 2;&#10;    grid-row: 1 / span 2;&#10;    display: grid;&#10;    grid-template-rows: var(--topbar-h) 1fr;&#10;}&#10;&#10;.topbar {&#10;    position: sticky;&#10;    top: 0;&#10;    z-index: 10;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: space-between;&#10;    padding: 0 clamp(var(--spacing-24), 4vw, var(--spacing-48));&#10;    @include mix.glass-surface();&#10;    background: var(--glass-bg);&#10;}&#10;&#10;.crumbs {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    gap: var(--spacing-8);&#10;    font-size: 0.875rem;&#10;}&#10;&#10;.crumbs .crumb {&#10;    color: var(--color-link);&#10;    text-decoration: none;&#10;}&#10;&#10;.crumbs .crumb:hover {&#10;    text-decoration: underline;&#10;    text-underline-offset: 2px;&#10;}&#10;&#10;.crumbs .crumb:focus-visible {&#10;    outline: 2px solid var(--color-accent);&#10;    outline-offset: 2px;&#10;    border-radius: 4px;&#10;}&#10;&#10;.crumbs .crumb.current {&#10;    color: var(--color-text);&#10;    font-weight: 600;&#10;}&#10;&#10;.sep {&#10;    opacity: 0.6;&#10;}&#10;&#10;.actions {&#10;    display: inline-flex;&#10;    gap: var(--spacing-8);&#10;}&#10;&#10;.actions .ghost {&#10;    height: 40px;&#10;    min-width: 40px;&#10;    padding: 0 var(--spacing-12);&#10;    border-radius: var(--radius-md);&#10;    border: 1px solid var(--divider-color);&#10;    background: transparent;&#10;    color: inherit;&#10;    cursor: pointer;&#10;}&#10;&#10;.actions .ghost:hover {&#10;    background: color-mix(in srgb, var(--color-text) 4%, transparent);&#10;}&#10;&#10;.page {&#10;    padding: var(--spacing-24) 0;&#10;}&#10;&#10;@media (max-width: 1024px) {&#10;    .shell, .shell.collapsed {&#10;        grid-template-columns: var(--sidebar-w-collapsed) 1fr;&#10;    }&#10;    .label, .group-label {&#10;        display: none;&#10;    }&#10;    .sidebar {&#10;        padding: var(--spacing-16) var(--spacing-12);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/app/layouts/main-layout/main-layout.component.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/app/layouts/main-layout/main-layout.component.ts" />
              <option name="originalContent" value="import {ChangeDetectionStrategy, Component, signal} from '@angular/core';&#10;import {CommonModule} from '@angular/common';&#10;import {RouterModule} from '@angular/router';&#10;import {ThemeService} from '../../core/services/theme.service';&#10;import {BreadcrumbService} from '../../core/services/breadcrumb.service';&#10;&#10;import { LUCIDE_ICONS, LucideIconProvider } from 'lucide-angular';&#10;import { Menu, LayoutDashboard, Upload, Mail, Calculator, Phone, Tags, Cog, Link, FileText, Search, Sun, Moon } from 'lucide-angular';&#10;&#10;    toggleSidebar() {&#10;        this.collapsed.update(v =&gt; !v);&#10;    }&#10;    imports: [CommonModule, RouterModule, LucideAngularModule],&#10;    providers: [&#10;      { provide: LUCIDE_ICONS, multi: true, useValue: new LucideIconProvider({ Menu, LayoutDashboard, Upload, Mail, Calculator, Phone, Tags, Cog, Link, FileText, Search, Sun, Moon }) }&#10;    ],&#10;" />
              <option name="updatedContent" value="import {ChangeDetectionStrategy, Component, inject, signal} from '@angular/core';&#10;import {CommonModule} from '@angular/common';&#10;import {RouterModule} from '@angular/router';&#10;import {ThemeService} from '../../core/services/theme.service';&#10;import {BreadcrumbService} from '../../core/services/breadcrumb.service';&#10;// lucide-angular&#10;import {LucideAngularModule, LUCIDE_ICONS, LucideIconProvider} from 'lucide-angular';&#10;import {Menu, LayoutDashboard, Upload, Mail, Calculator, Phone, Tags, Cog, Link, FileText, Search, Sun, Moon} from 'lucide-angular';&#10;&#10;@Component({&#10;  selector: 'sc-main-layout',&#10;  standalone: true,&#10;  imports: [CommonModule, RouterModule, LucideAngularModule],&#10;  templateUrl: './main-layout.component.html',&#10;  styleUrls: ['./main-layout.component.scss'],&#10;  changeDetection: ChangeDetectionStrategy.OnPush,&#10;  providers: [&#10;    {provide: LUCIDE_ICONS, multi: true, useValue: new LucideIconProvider({Menu, LayoutDashboard, Upload, Mail, Calculator, Phone, Tags, Cog, Link, FileText, Search, Sun, Moon})}&#10;  ]&#10;})&#10;export class MainLayoutComponent {&#10;  collapsed = signal(false);&#10;  // serviços públicos para template&#10;  readonly theme = inject(ThemeService);&#10;  readonly bc = inject(BreadcrumbService);&#10;&#10;  toggleSidebar() {&#10;    this.collapsed.update(v =&gt; !v);&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/app/shared/components/not-found.component.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/app/shared/components/not-found.component.ts" />
              <option name="updatedContent" value="import { ChangeDetectionStrategy, Component } from '@angular/core';&#10;import { RouterModule } from '@angular/router';&#10;&#10;@Component({&#10;  selector: 'sc-not-found',&#10;  standalone: true,&#10;  imports: [RouterModule],&#10;  template: `&#10;    &lt;section class=&quot;container&quot; aria-labelledby=&quot;nf-title&quot;&gt;&#10;      &lt;h1 id=&quot;nf-title&quot;&gt;Página não encontrada&lt;/h1&gt;&#10;      &lt;p class=&quot;muted&quot;&gt;Verifique a URL ou volte para a Dashboard.&lt;/p&gt;&#10;      &lt;p&gt;&lt;a routerLink=&quot;/&quot;&gt;Ir para Dashboard&lt;/a&gt;&lt;/p&gt;&#10;    &lt;/section&gt;&#10;  `,&#10;  styles: [&#10;    `:host{display:block} .muted{color:var(--color-text-muted)} section{padding-block:var(--spacing-32)}`&#10;  ],&#10;  changeDetection: ChangeDetectionStrategy.OnPush,&#10;})&#10;export class NotFoundComponent {}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/app/shared/components/ui/sc-button.component.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/app/shared/components/ui/sc-button.component.html" />
              <option name="originalContent" value="&lt;button&#10;  class=&quot;sc-btn {{variant}} {{size}}&quot;&#10;  type=&quot;button&quot;&#10;  [disabled]=&quot;disabled || loading&quot;&#10;  [attr.aria-busy]=&quot;loading ? 'true' : null&quot;&#10;  (click)=&quot;clicked.emit($event)&quot;&#10;&gt;&#10;  &lt;span class=&quot;spinner&quot; *ngIf=&quot;loading&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&#10;  &lt;span class=&quot;label&quot;&gt;&lt;ng-content&gt;&lt;/ng-content&gt;&lt;/span&gt;&#10;&lt;/button&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;ng-container *ngIf=&quot;routerLink || href; else nativeBtn&quot;&gt;&#10;  &lt;a&#10;    *ngIf=&quot;routerLink; else ext&quot;&#10;    class=&quot;sc-btn {{variant}} {{size}}&quot;&#10;    [routerLink]=&quot;routerLink&quot;&#10;    role=&quot;button&quot;&#10;    [attr.aria-busy]=&quot;loading ? 'true' : null&quot;&#10;    [attr.aria-disabled]=&quot;(disabled || loading) ? 'true' : null&quot;&#10;    [tabIndex]=&quot;(disabled || loading) ? -1 : 0&quot;&#10;  &gt;&#10;    &lt;span class=&quot;spinner&quot; *ngIf=&quot;loading&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&#10;    &lt;span class=&quot;label&quot;&gt;&lt;ng-content&gt;&lt;/ng-content&gt;&lt;/span&gt;&#10;  &lt;/a&gt;&#10;  &lt;ng-template #ext&gt;&#10;    &lt;a&#10;      class=&quot;sc-btn {{variant}} {{size}}&quot;&#10;      [href]=&quot;href&quot;&#10;      [attr.target]=&quot;target&quot;&#10;      [attr.rel]=&quot;rel&quot;&#10;      role=&quot;button&quot;&#10;      [attr.aria-busy]=&quot;loading ? 'true' : null&quot;&#10;      [attr.aria-disabled]=&quot;(disabled || loading) ? 'true' : null&quot;&#10;      [tabIndex]=&quot;(disabled || loading) ? -1 : 0&quot;&#10;    &gt;&#10;      &lt;span class=&quot;spinner&quot; *ngIf=&quot;loading&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&#10;      &lt;span class=&quot;label&quot;&gt;&lt;ng-content&gt;&lt;/ng-content&gt;&lt;/span&gt;&#10;    &lt;/a&gt;&#10;  &lt;/ng-template&gt;&#10;&lt;/ng-container&gt;&#10;&#10;&lt;ng-template #nativeBtn&gt;&#10;  &lt;button&#10;    class=&quot;sc-btn {{variant}} {{size}}&quot;&#10;    type=&quot;button&quot;&#10;    [disabled]=&quot;disabled || loading&quot;&#10;    [attr.aria-busy]=&quot;loading ? 'true' : null&quot;&#10;    (click)=&quot;clicked.emit($event)&quot;&#10;  &gt;&#10;    &lt;span class=&quot;spinner&quot; *ngIf=&quot;loading&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;&#10;    &lt;span class=&quot;label&quot;&gt;&lt;ng-content&gt;&lt;/ng-content&gt;&lt;/span&gt;&#10;  &lt;/button&gt;&#10;&lt;/ng-template&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/app/shared/components/ui/sc-button.component.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/app/shared/components/ui/sc-button.component.ts" />
              <option name="originalContent" value="import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';&#10;import {CommonModule} from '@angular/common';&#10;export type ScButtonVariant = 'filled' | 'outline' | 'ghost';&#10;export type ScButtonSize = 'sm' | 'md' | 'lg';&#10;&#10;@Component({&#10;    selector: 'sc-button',&#10;    standalone: true,&#10;    imports: [CommonModule],&#10;    imports: [CommonModule],&#10;    templateUrl: './sc-button.component.html',&#10;    styleUrl: './sc-button.component.scss',&#10;})&#10;    changeDetection: ChangeDetectionStrategy.OnPush,&#10;    @Input() variant: ScButtonVariant = 'filled';&#10;    @Input() size: ScButtonSize = 'md';&#10;    @Input() loading = false;&#10;    @Input() disabled = false;&#10;    @Output() clicked = new EventEmitter&lt;Event&gt;();&#10;}&#10;&#10;" />
              <option name="updatedContent" value="import { Component, EventEmitter, Input, Output, ChangeDetectionStrategy } from '@angular/core';&#10;import { CommonModule } from '@angular/common';&#10;import { RouterModule } from '@angular/router';&#10;&#10;export type ScButtonVariant = 'filled' | 'outline' | 'ghost';&#10;export type ScButtonSize = 'sm' | 'md' | 'lg';&#10;&#10;@Component({&#10;  selector: 'sc-button',&#10;  standalone: true,&#10;  imports: [CommonModule, RouterModule],&#10;  templateUrl: './sc-button.component.html',&#10;  styleUrls: ['./sc-button.component.scss'],&#10;  changeDetection: ChangeDetectionStrategy.OnPush&#10;})&#10;export class ScButtonComponent {&#10;  @Input() variant: ScButtonVariant = 'filled';&#10;  @Input() size: ScButtonSize = 'md';&#10;  @Input() loading = false;&#10;  @Input() disabled = false;&#10;  @Output() clicked = new EventEmitter&lt;Event&gt;();&#10;&#10;  // Link mode&#10;  @Input() routerLink?: any[] | string;&#10;  @Input() href?: string;&#10;  @Input() target?: string;&#10;  @Input() rel: string = 'noopener noreferrer';&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/index.html" />
              <option name="originalContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;pt-BR&quot; data-theme=&quot;light&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;SpeedClip&lt;/title&gt;&#10;  &lt;base href=&quot;/&quot;&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; href=&quot;favicon.ico&quot;&gt;&#10;  &lt;!-- Tipografia Inter --&gt;&#10;  &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;  &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;  &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script&gt;&#10;    (function() {&#10;      try {&#10;        var saved = localStorage.getItem('sc_theme');&#10;        var theme = saved || (window.matchMedia &amp;&amp; window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');&#10;        document.documentElement.setAttribute('data-theme', theme);&#10;        document.documentElement.style.colorScheme = theme;&#10;      } catch (e) {}&#10;    })();&#10;  &lt;/script&gt;&#10;  &lt;style&gt;&#10;    /* CSS crítico para evitar flash de tema */&#10;    html, body { height: 100%; }&#10;    body { margin: 0; background: #f7f8fa; color: #0f141a; }&#10;    html[data-theme='dark'] body { background: #0b0f14; color: #e6e9ee; }&#10;  &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;app-root&gt;&lt;/app-root&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;pt-BR&quot; data-theme=&quot;light&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;SpeedClip&lt;/title&gt;&#10;  &lt;base href=&quot;/&quot;&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; href=&quot;/favicon.ico&quot;&gt;&#10;  &lt;!-- Tipografia Inter --&gt;&#10;  &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#10;  &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#10;  &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script&gt;&#10;    (function() {&#10;      try {&#10;        var saved = localStorage.getItem('sc_theme');&#10;        var theme = saved || (window.matchMedia &amp;&amp; window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');&#10;        document.documentElement.setAttribute('data-theme', theme);&#10;        document.documentElement.style.colorScheme = theme;&#10;      } catch (e) {}&#10;    })();&#10;  &lt;/script&gt;&#10;  &lt;style&gt;&#10;    /* CSS crítico para evitar flash de tema */&#10;    html, body { height: 100%; }&#10;    body { margin: 0; background: #f7f8fa; color: #0f141a; }&#10;    html[data-theme='dark'] body { background: #0b0f14; color: #e6e9ee; }&#10;  &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;app-root&gt;&lt;/app-root&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/styles/abstracts/variables.scss">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/styles/abstracts/variables.scss" />
              <option name="updatedContent" value="/* Variables helpers (breakpoints, sizes) */&#10;:root {&#10;  /* Breakpoints */&#10;  --bp-sm: 320px;&#10;  --bp-md: 768px;&#10;  --bp-lg: 1024px;&#10;  --bp-xl: 1200px;&#10;}&#10;&#10;/* Density variants (roomy default) */&#10;:root {&#10;  --density: roomy; /* roomy | comfortable | compact */&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/styles/components/cards.scss">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/styles/components/cards.scss" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="/* Utility class for future use; not applied anywhere by default */&#10;.glass-card {&#10;  background: var(--glass-bg);&#10;  backdrop-filter: blur(var(--glass-blur));&#10;  -webkit-backdrop-filter: blur(var(--glass-blur));&#10;  border: var(--glass-border);&#10;  box-shadow: var(--glass-shadow, none);&#10;  border-radius: var(--radius-lg);&#10;  padding: var(--spacing-24);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/speedclip-web/src/styles/mixins.scss">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/speedclip-web/src/styles/mixins.scss" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="@mixin glass-surface {&#10;  /* Glass surface using CSS tokens */&#10;  background: var(--glass-bg);&#10;  backdrop-filter: blur(var(--glass-blur)) saturate(1.05);&#10;  -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(1.05);&#10;  border: 1px solid var(--glass-border);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>